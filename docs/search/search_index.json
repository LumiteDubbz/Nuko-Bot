{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Nuko Nuko is a Discord bot for community management, written in C# using the Discord.Net library on .NET Core 3.0. It features lots of moderation commands in a customisable fashion. It also has a large section for point managing based on rounds achieved for Maycrom's BTDB Overhaul Mod , but it can be used for any Bloons mod. Setup Commands GitHub Support Here Here Here Here","title":"Home"},{"location":"#nuko","text":"Nuko is a Discord bot for community management, written in C# using the Discord.Net library on .NET Core 3.0. It features lots of moderation commands in a customisable fashion. It also has a large section for point managing based on rounds achieved for Maycrom's BTDB Overhaul Mod , but it can be used for any Bloons mod. Setup Commands GitHub Support Here Here Here Here","title":"Nuko"},{"location":"commands/","text":"Todo.","title":"Commands"},{"location":"setup/","text":"Setup This setup tutorial is intended for server (\"guild\") owners to follow. If you want to learn how to setup the bot for self-hosting, please check out this video link. Once you've added the bot to your server (using this link), you'll need to set up some things for the bot to work properly. Arguments in <angle brackets> are required, those in [square brackets] are optional. Add the muted role: >SetMutedRole <@mutedRole> . This role should be above all other user roles, have the send messages permission disabled in both the rule permissions and channel/category overwrites. Add moderator roles: >AddModRole <@moderatorRole> <permissionLevel> . The valid permission levels are 1, 2 and 3. 1 is for Moderators (access to Mute, Kick, etc.), 2 is for Administrators (access to Ban, SetWelcomeMessage, etc.) and 3 provides access to all commands. Users with the Discord \"Administrator\" role permission are automatically given access to level 2 commands. Add the channel to log all moderation actions to: >SetModLog <#modLogChannel> . Any actions done by moderators, administrators and owners (such as chat >Clear s, >Kick s, etc.) will be recorded in this channel. >Mute s are indefinite or until a moderator manually >Unmute s the user. To mute a person for a set amount of time, use >CustomMute <@userToMute> <hours> [reason] and Nuko will automatically unmute them after their time is up.","title":"Setup"},{"location":"setup/#setup","text":"This setup tutorial is intended for server (\"guild\") owners to follow. If you want to learn how to setup the bot for self-hosting, please check out this video link. Once you've added the bot to your server (using this link), you'll need to set up some things for the bot to work properly. Arguments in <angle brackets> are required, those in [square brackets] are optional. Add the muted role: >SetMutedRole <@mutedRole> . This role should be above all other user roles, have the send messages permission disabled in both the rule permissions and channel/category overwrites. Add moderator roles: >AddModRole <@moderatorRole> <permissionLevel> . The valid permission levels are 1, 2 and 3. 1 is for Moderators (access to Mute, Kick, etc.), 2 is for Administrators (access to Ban, SetWelcomeMessage, etc.) and 3 provides access to all commands. Users with the Discord \"Administrator\" role permission are automatically given access to level 2 commands. Add the channel to log all moderation actions to: >SetModLog <#modLogChannel> . Any actions done by moderators, administrators and owners (such as chat >Clear s, >Kick s, etc.) will be recorded in this channel. >Mute s are indefinite or until a moderator manually >Unmute s the user. To mute a person for a set amount of time, use >CustomMute <@userToMute> <hours> [reason] and Nuko will automatically unmute them after their time is up.","title":"Setup"}]}